name: Node CI

on:
  push:
    branches-ignore:
      - gh-pages
    paths-ignore:
      - docs

  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        name: Yarn cache
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - uses: actions/cache@v2
        name: .vscode-test cache
        id: vscode-test-cache
        with:
          path: .vscode-test
          key: ${{ runner.os }}-vscode-test
          restore-keys: |
            ${{ runner.os }}-vscode-test


      - name: Install dependencies and build
        run: |
          yarn --frozen-lockfile
          yarn compile

      - name: Start xvfb
        if: matrix.os == 'ubuntu-latest'
        run: |
          set -e
          /usr/bin/Xvfb :10 -ac >> /tmp/Xvfb.out 2>&1 &
          disown -ar
          echo "Started xvfb"

      - run: yarn test:server
        env:
          DISPLAY: :10

      - run: yarn test:grammar
        env:
          DISPLAY: :10

      - run: yarn test:lsp
        env:
          DISPLAY: :10

      - run: yarn test:vue3
        env:
          DISPLAY: :10

      - run: yarn test:int
        env:
          DISPLAY: :10